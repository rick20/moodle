upstream docker_moodle {
	server	moodle:9000;
}

map $scheme $proxy_x_forwarded_ssl {
	default off;
	https on;
}

server {
	listen ${NGINX_PORT} default_server;
	listen [::]:${NGINX_PORT} ipv6only=on default_server;
	#
	server_name ${NGINX_HOST} www.${NGINX_HOST};
	#
	location ~ ^/.well-known/acme-challenge/ {
		root /tmp/acme-challenge;
	}
	#
	#location / {
		#port_in_redirect off;
		#return 301 https://$host$request_uri;
	#}
}

server {
	#listen 443 ssl http2;
	#listen [::]:443 ipv6only=on ssl http2;
	#
	server_name ${NGINX_HOST} www.${NGINX_HOST};
	#
	#ssl_certificate /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
	#ssl_trusted_certificate /etc/letsencrypt/live/${NGINX_HOST}/chain.pem;
	#ssl_dhparam /etc/letsencrypt/ssl-dhparam.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;

	root /var/www/html/moodle;
	index	index.php;

	location / {
		try_files $uri $uri/ /index.php$is_args$args;
	}

	location ~ [^/]\.php(/|$) {
		fastcgi_split_path_info  ^(.+\.php)(/.+)$;
		if (!-f $document_root$fastcgi_script_name) {
			return 404;
		}
		fastcgi_index	index.php;
		fastcgi_pass	docker_moodle;
		include	fastcgi_params;
		fastcgi_param	PATH_INFO	$fastcgi_path_info;
		fastcgi_param	SCRIPT_FILENAME	$document_root$fastcgi_script_name;

		# This passes 404 pages to Moodle so they can be themed
		error_page 404 /error/index.php; error_page 403 =404 /error/index.php;
	}

	location /dataroot/ {
		internal;
		alias /home/${NGINX_HOST}/moodledata/; # ensure the path ends with /
	}
	#
	# This should be after the php fpm rule and very close to the last nginx ruleset.
	# Don't allow direct access to various internal files. See MDL-69333
	location ~ (/vendor/|/node_modules/|composer\.json|/readme|/README|readme\.txt|/upgrade\.txt|db/install\.xml|/fixtures/|/behat/|phpunit\.xml|\.lock|environment\.xml) {
		deny all;
		return 404;
	}
	# deny access to .htaccess vb. files, if Apache's document root
	location ~/\. {
		deny all;
		log_not_found off;
	}
	#
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}
	#
	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}
	#
	access_log off;
	error_log  /var/log/nginx/${NGINX_HOST}.error.log error;
}
